@startuml
title Stacked State for eth_estimateGas (class diagram)
hide empty members

enum ValueState {
  INVALID
  NOT_YET_FETCHED
  PRESENT
  MISSING
  UPDATED
  DELETED
}

class Entry {
   +state
   +value
}
note top of Entry: Value ("cache line") state + value

class UpdatableReferenceCache<K> {
  +Entry get(K)
  +updated(K,Object)
  +delete(K)
  +coalesceFrom(UpdatableReferenceCache)
  +fill(K,Object)
}

abstract CachingStateFrame<Address> <<(A,salmon)>> {
  #parentFrame
  #accountCache
  #tokenCache
  +CachingStateFrame(upstreamFrame,Class...)
  +getAccount()
  +setAccount()
  +deleteAccount()
  +getToken()
  +setToken()
  +deleteToken()
  +updatesFromDownstream()
  +getUpstream()
}

class Accessor<K,V> {
  +Optional<V> get(key)
}

class StackedStateFrames<K> {
  -stack
  +StackedStateFrames(Accessors...)
}

Entry::state o-left- ValueState
UpdatableReferenceCache::get *-up- Entry

StackedStateFrames::stack *-- CachingStateFrame : owns list of
CachingStateFrame::parentFrame o- CachingStateFrame
CachingStateFrame::accountCache *- UpdatableReferenceCache : accounts
CachingStateFrame::tokenCache *- UpdatableReferenceCache : tokens
ROCachingStateFrame <|-- RWCachingStateFrame
CachingStateFrame <|-- ROCachingStateFrame
CachingStateFrame <|-- DatabaseBackedStateFrame
StackedStateFrames::StackedStateFrames o-left- Accessor : holds values for

skinparam groupInheritance 2
@enduml
