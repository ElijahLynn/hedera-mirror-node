package com.hedera.mirror.web3.service;

/*-
 * ‌
 * Hedera Mirror Node
 * ​
 * Copyright (C) 2019 - 2023 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

import static com.hedera.mirror.common.domain.entity.EntityType.ACCOUNT;
import static com.hedera.mirror.common.domain.entity.EntityType.CONTRACT;
import static com.hedera.mirror.common.domain.entity.EntityType.TOKEN;
import static com.hedera.mirror.common.util.DomainUtils.fromEvmAddress;
import static com.hedera.mirror.common.util.DomainUtils.toEvmAddress;
import static com.hedera.mirror.web3.evm.utils.EvmTokenUtils.toAddress;
import static com.hedera.mirror.web3.service.model.CallServiceParameters.CallType.ETH_CALL;
import static com.hedera.mirror.web3.utils.FunctionEncoder.ECDSA;
import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

import lombok.RequiredArgsConstructor;
import org.apache.tuweni.bytes.Bytes;
import org.hyperledger.besu.datatypes.Address;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.EnumSource;
import org.springframework.beans.factory.annotation.Autowired;

import com.hedera.mirror.common.domain.entity.EntityId;
import com.hedera.mirror.common.domain.token.NftId;
import com.hedera.mirror.common.domain.token.TokenFreezeStatusEnum;
import com.hedera.mirror.common.domain.token.TokenId;
import com.hedera.mirror.common.domain.token.TokenKycStatusEnum;
import com.hedera.mirror.common.domain.token.TokenTypeEnum;
import com.hedera.mirror.common.domain.transaction.CustomFee;
import com.hedera.mirror.web3.Web3IntegrationTest;
import com.hedera.mirror.web3.service.model.CallServiceParameters;
import com.hedera.mirror.web3.utils.FunctionEncoder;
import com.hedera.node.app.service.evm.store.models.HederaEvmAccount;

@RequiredArgsConstructor(onConstructor = @__(@Autowired))
class PrecompileCallServiceTest extends Web3IntegrationTest {
    //The contract source `PrecompileTestContract.sol` is in test resources
    //PrecompileTestContract
    private static final String CONTRACT_NAME = "PrecompileTestContract";
    private static final Address CONTRACT_ADDRESS = toAddress(EntityId.of(0, 0, 1255, CONTRACT));
    private static final Address SENDER_ADDRESS = toAddress(EntityId.of(0, 0, 1254, ACCOUNT));
    private static final Address FUNGIBLE_TOKEN_ADDRESS = toAddress(EntityId.of(0, 0, 1252, TOKEN));
    private static final Address NFT_ADDRESS = toAddress(EntityId.of(0, 0, 1251, TOKEN));
//    private static final Address EMPTY_ADDRESS = Address.wrap(Bytes.wrap(new byte[20]));
    private final ContractCallService contractCallService;
    private final FunctionEncoder functionEncoder;



    @ParameterizedTest
    @EnumSource(ContractFunctions.class)
    void evmPrecompileTokenFunctionsTest(ContractFunctions contractFunc) {
        final var functionHash =
                functionEncoder.functionHashFor(contractFunc.name, CONTRACT_NAME, contractFunc.functionParameters);
        final var serviceParameters = serviceParameters(functionHash);
        final var successfulResponse =
                functionEncoder.encodedResultFor(contractFunc.name, CONTRACT_NAME, contractFunc.expectedResultFields);

        assertThat(contractCallService.processCall(serviceParameters)).isEqualTo(successfulResponse);
    }

//    @Test
//    void isFrozenWithEthAddress(){
//        final var functionHash = "0x565ca6fa00000000000000000000000000000000000000000000000000000000000004e400000000000000000000000023f5e49569a835d7bf9aefd30e4f60cdd570f225";
//        final var serviceParameters = serviceParameters(functionHash);
//
//        assertThat(contractCallService.processCall(serviceParameters)).isEqualTo(HEXED_ONE);
//    }
//
//    @Test
//    void nftInfoForInvalidSerialNo(){
//        final var functionHash = "0x8e5e799600000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000004";
//        final var serviceParameters = serviceParameters(functionHash);
//
//        assertThatThrownBy(() -> contractCallService.processCall(serviceParameters))
//                .isInstanceOf(InvalidTransactionException.class);
//    }
//
//    @Test
//    void tokenInfoForNonTokenAccount(){
//        final var functionHash = "0x35589a1300000000000000000000000000000000000000000000000000000000000004e7";
//        final var serviceParameters = serviceParameters(functionHash);
//
//        assertThatThrownBy(() -> contractCallService.processCall(serviceParameters))
//                .isInstanceOf(InvalidTransactionException.class);
//    }

    @RequiredArgsConstructor
    enum ContractFunctions {
        IS_FROZEN                       ("isTokenFrozen", new Address[] {FUNGIBLE_TOKEN_ADDRESS, SENDER_ADDRESS}, new Boolean[] {true}),
        IS_KYC                          ("isKycGranted", new Address[] {FUNGIBLE_TOKEN_ADDRESS, SENDER_ADDRESS}, new Boolean[] {true}),
        IS_KYC_FOR_NFT                  ("isKycGranted", new Address[] {NFT_ADDRESS, SENDER_ADDRESS}, new Boolean[] {false}),
        IS_TOKEN_PRECOMPILE             ("isTokenAddress", new Address[] {FUNGIBLE_TOKEN_ADDRESS},new Boolean[] {true}),
        IS_TOKEN_PRECOMPILE_NFT         ("isTokenAddress", new Address[] {NFT_ADDRESS},new Boolean[] {true}),
        GET_TOKEN_DEFAULT_KYC           ("getTokenDefaultKyc", new Address[] {FUNGIBLE_TOKEN_ADDRESS},new Boolean[] {true}),
        GET_TOKEN_DEFAULT_KYC_NFT       ("getTokenDefaultKyc", new Address[] {NFT_ADDRESS},new Boolean[] {true}),
        GET_TOKEN_TYPE                  ("getType", new Address[] {FUNGIBLE_TOKEN_ADDRESS},new Long[] {0L}),
        GET_TOKEN_TYPE_FOR_NFT          ("getType", new Address[] {NFT_ADDRESS},new Long[] {1L}),
//        GET_CUSTOM_FEES                 ("0x44f38bc800000000000000000000000000000000000000000000000000000000000004e4", "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
//        GET_CUSTOM_FEES_FOR_NFT         ("0x44f38bc800000000000000000000000000000000000000000000000000000000000004e3", "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
//        GET_TOKEN_EXPIRY                ("0x1de8edad00000000000000000000000000000000000000000000000000000000000004e4", "0x0000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e40000000000000000000000000000000000000000000000000000000000000708"),
//        GET_TOKEN_EXPIRY_FOR_NFT("0x1de8edad00000000000000000000000000000000000000000000000000000000000004e3", "0x0000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000708"),
        GET_TOKEN_ADMIN_KEY             ("getTokenKeyPublic", new Object[]{FUNGIBLE_TOKEN_ADDRESS, 4L},
        new Object[]{false, Address.ZERO, new byte[0], ECDSA, Address.ZERO}),
//        GET_TOKEN_FREEZE_KEY            ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e40000000000000000000000000000000000000000000000000000000000000004", TOKEN_KEY_SUCCESS_RESULT),
//        GET_TOKEN_WIPE_KEY              ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e40000000000000000000000000000000000000000000000000000000000000008", TOKEN_KEY_SUCCESS_RESULT),
//        GET_TOKEN_SUPPLY_KEY            ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e40000000000000000000000000000000000000000000000000000000000000010", TOKEN_KEY_SUCCESS_RESULT),
//        GET_TOKEN_KYC_KEY_FOR_NFT       ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000002", TOKEN_KEY_SUCCESS_RESULT),
//        GET_TOKEN_FEE_KEY_FOR_NFT       ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000020", TOKEN_KEY_SUCCESS_RESULT),
//        GET_TOKEN_PAUSE_KEY_FOR_NFT     ("0x1955de0b00000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000040", TOKEN_KEY_SUCCESS_RESULT),
        GET_TOKEN_DEFAULT_FREEZE        ("getTokenDefaultFreeze", new Address[] {FUNGIBLE_TOKEN_ADDRESS},new Boolean[] {false}),
        GET_TOKEN_DEFAULT_FREEZE_FOR_NFT("getTokenDefaultFreeze", new Address[] {NFT_ADDRESS},new Boolean[] {false});
//        GET_TOKEN_INFO                  ("0x35589a1300000000000000000000000000000000000000000000000000000000000004e4", "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e200000000000000000000000000000000000000000000000000000000000000e40000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000004e600000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e4000000000000000000000000000000000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000054862617273000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448424152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008546573744d656d6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000920000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043078303100000000000000000000000000000000000000000000000000000000"),
//        GET_TOKEN_INFO_FOR_NFT          ("0x35589a1300000000000000000000000000000000000000000000000000000000000004e3", "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e200000000000000000000000000000000000000000000000000000000000000e40000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000004e600000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e3000000000000000000000000000000000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000054862617273000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448424152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008546573744d656d6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000920000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043078303100000000000000000000000000000000000000000000000000000000"),
//        GET_INFO_FOR_FUNGIBLE           ("0x59c16f5a00000000000000000000000000000000000000000000000000000000000004e4", "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e200000000000000000000000000000000000000000000000000000000000000e40000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000004e600000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e4000000000000000000000000000000000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000054862617273000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448424152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008546573744d656d6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000920000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043078303100000000000000000000000000000000000000000000000000000000"),
//        GET_INFO_FOR_NFT                ("0x8e5e799600000000000000000000000000000000000000000000000000000000000004e30000000000000000000000000000000000000000000000000000000000000001", "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000004e600000000000000000000000000000000000000000000000014787dcc6ec4e0260000000000000000000000000000000000000000000000000000000000000f4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000e200000000000000000000000000000000000000000000000000000000000000e40000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000004e600000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000063d77f3a00000000000000000000000000000000000000000000000000000000000004e3000000000000000000000000000000000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000054862617273000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448424152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008546573744d656d6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000920000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021ccd4f651636406f8a2a9902a2a604be1fb480dba6591ff4d992f8a6bc6abc137c

        private final String name;
        private final Object[] functionParameters;
        private final Object[] expectedResultFields;
    }

    private CallServiceParameters serviceParameters(Bytes callData) {
        final var sender = new HederaEvmAccount(SENDER_ADDRESS);
        persistEntities();

        return CallServiceParameters.builder()
                .sender(sender)
                .value(0L)
                .receiver(CONTRACT_ADDRESS)
                .callData(callData)
                .providedGasLimit(120000000L)
                .isStatic(true)
                .callType(ETH_CALL)
                .build();
    }

    private void persistEntities() {
        final var contractBytes = functionEncoder.getContractBytes(CONTRACT_NAME);
        final var contractEntityId = fromEvmAddress(CONTRACT_ADDRESS.toArrayUnsafe());
        final var contractEvmAddress = toEvmAddress(contractEntityId);
        final var ethAddress = Address.fromHexString("0x23f5e49569a835d7bf9aefd30e4f60cdd570f225");

        domainBuilder.entity().customize(e ->
                e.id(contractEntityId.getId())
                        .num(contractEntityId.getEntityNum())
                        .evmAddress(contractEvmAddress)
                        .type(CONTRACT).balance(1500L)).persist();

        domainBuilder.contract().customize(c ->
                        c.id(contractEntityId.getId())
                                .runtimeBytecode(contractBytes))
                .persist();

        domainBuilder.contractState().customize(c ->
                        c.contractId(contractEntityId.getId())
                                .slot(Bytes.fromHexString(
                                        "0x0000000000000000000000000000000000000000000000000000000000000000").toArrayUnsafe())
                                .value(Bytes.fromHexString(
                                        "0x4746573740000000000000000000000000000000000000000000000000000000").toArrayUnsafe()))
                .persist();

        domainBuilder.recordFile().customize(f ->
                f.bytes(contractBytes)).persist();

        final var senderEntityId = fromEvmAddress(SENDER_ADDRESS.toArrayUnsafe());
        final var senderEvmAddress = toEvmAddress(senderEntityId);

        domainBuilder.entity().customize(e ->
                        e.id(senderEntityId.getId())
                                .num(senderEntityId.getEntityNum())
                                .evmAddress(senderEvmAddress)
                                .balance(20000L))
                .persist();

        final var ethAccount = 358L;

        domainBuilder.entity().customize(e ->
                        e.id(ethAccount)
                                .num(ethAccount)
                                .evmAddress(ethAddress.toArrayUnsafe())
                                .balance(2000L))
                .persist();

        final var tokenEntityId = fromEvmAddress(FUNGIBLE_TOKEN_ADDRESS.toArrayUnsafe());
        final var tokenEvmAddress = toEvmAddress(tokenEntityId);
        final var key = ECDSA;

        domainBuilder.entity().customize(e ->
                e.id(tokenEntityId.getId())
                        .autoRenewAccountId(tokenEntityId.getId())
                        .num(tokenEntityId.getEntityNum())
                        .evmAddress(tokenEvmAddress)
                        .type(TOKEN).balance(1500L)
//                        .key(key)
                        .memo("TestMemo")
                        .expirationTimestamp(1675067194949034022L)
        ).persist();

        final var ta = domainBuilder.token().customize(t ->
                t.tokenId(new TokenId(tokenEntityId))
                        .treasuryAccountId(EntityId.of(0, 0, senderEntityId.getId(), ACCOUNT))
                        .type(TokenTypeEnum.FUNGIBLE_COMMON)
                        .kycKey(key)
                        .feeScheduleKey(key)
                        .freezeKey(key)
                        .pauseKey(key)
                        .supplyKey(key)

        ).persist();

        customFeesPersist(senderEntityId, tokenEntityId);

        domainBuilder.tokenAccount().customize(
                        e -> e.freezeStatus(TokenFreezeStatusEnum.FROZEN)
                                .accountId(senderEntityId.getId())
                                .tokenId(tokenEntityId.getId())
                                .kycStatus(TokenKycStatusEnum.GRANTED))
                .persist();

        domainBuilder.tokenAccount().customize(
                        e -> e.freezeStatus(TokenFreezeStatusEnum.FROZEN)
                                .accountId(ethAccount)
                                .tokenId(tokenEntityId.getId())
                                .kycStatus(TokenKycStatusEnum.GRANTED))
                .persist();

        final var nftEntityId = fromEvmAddress(NFT_ADDRESS.toArrayUnsafe());
        final var nftEvmAddress = toEvmAddress(nftEntityId);

        domainBuilder.entity().customize(e ->
                e.id(nftEntityId.getId())
                        .autoRenewAccountId(nftEntityId.getId())
                        .num(nftEntityId.getEntityNum())
                        .evmAddress(nftEvmAddress)
                        .type(TOKEN).balance(1500L)
                        .key(key)
                        .memo("TestMemo")
                        .expirationTimestamp(1675067194949034022L)
        ).persist();

        domainBuilder.token().customize(t ->
                t.tokenId(new TokenId(nftEntityId))
                        .treasuryAccountId(EntityId.of(0, 0, senderEntityId.getId(), ACCOUNT))
                        .type(TokenTypeEnum.NON_FUNGIBLE_UNIQUE)
                        .kycKey(key)
                        .feeScheduleKey(key)
                        .freezeKey(key)
                        .pauseKey(key)
                        .supplyKey(key)
                        .wipeKey(key)
        ).persist();

        domainBuilder.nft().customize(n ->
                n.id(new NftId(1L, nftEntityId))
                        .accountId(EntityId.of(0, 0, senderEntityId.getId(), ACCOUNT))
                        .createdTimestamp(1475067194949034022L)
                        .metadata(new byte[] {1, 2, 3})
                        .modifiedTimestamp(1475067194949034022L)
        ).persist();
    }

    private void customFeesPersist(EntityId collectorAccountId, EntityId tokenEntityId){
        domainBuilder.customFee().customize(f ->
                        f.collectorAccountId(collectorAccountId)
                                .id(new CustomFee.Id(1L, tokenEntityId))
                                .denominatingTokenId(tokenEntityId))
                .persist();

        domainBuilder.customFee().customize(f ->
                        f.collectorAccountId(collectorAccountId)
                                .id(new CustomFee.Id(2L, tokenEntityId))
                                .royaltyDenominator(0L)
                                .denominatingTokenId(tokenEntityId))
                .persist();

        domainBuilder.customFee().customize(f ->
                        f.collectorAccountId(collectorAccountId)
                                .id(new CustomFee.Id(3L, tokenEntityId))
                                .royaltyDenominator(0L)
                                .royaltyNumerator(0L)
                                .denominatingTokenId(tokenEntityId))
                .persist();

        domainBuilder.customFee().customize(f ->
                        f.collectorAccountId(null)
                                .id(new CustomFee.Id(4L, tokenEntityId))
                                .royaltyDenominator(0L)
                                .royaltyNumerator(0L)
                                .denominatingTokenId(tokenEntityId))
                .persist();
    }
}
